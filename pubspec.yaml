name: test_1
description: A new Flutter project.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.0.2 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:

  # Cloud-related dependencies
  cloud_firestore: # Firestore database
  firebase_storage: # Firebase storage for file uploads
  firebase_auth: # Firebase authentication
  firebase_core: ^2.13.0 # Firebase core functionality
  firebase_core_platform_interface: # Platform-specific implementations for Firebase core
  google_sign_in: # Google sign-in authentication
  firebase_app_check: # Firebase App Check for app verification
  google_fonts: # Google Fonts for text styling

  # State management and data handling dependencies
  shared_preferences: # Local storage for simple key-value pairs
  provider: # State management library
  intl_phone_field: # Phone number input field widget
  get: # Dependency injection library

  # Design-related dependencies
  palette_generator: # Color palette generator
  carousel_slider: # Image carousel slider
  dots_indicator: # Page indicator dots for carousel slider

  # Input-related dependencies
  cached_network_image: # Caching and displaying network images
  image_picker: # Image picker for selecting images from the device
  image_picker_ios: # iOS-specific implementation for image picker
  image_cropper:
  fluttertoast: # Displaying toast notifications
  get_it: # Service locator for dependency injection

  flutter_rating_bar:
  photo_view:
  flutter_bloc: 
  equatable: 
  bloc: 
  gap:

  # dynamic_color: ^1.6.5
  # dynamic_colorscheme: ^1.0.1

  flutter:
    sdk: flutter
  cupertino_icons: ^1.0.2
     
dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:



  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/logo/
    - assets/images/stocks/
    - assets/images/fiction/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
